Q1 : how to sync on-chain event
There are two ways to sync on-chain event
1.WebSocket: Monitor on-chain events using WebSocket.
2.HTTP: send HTTP requests in a loop to fetch data.

Q2 :How should we handle blockchain fork problem during data sync?
There are two ways to handle this problem.
1. Wait for 12 block confirmations (about 3 minutes) before data sync.
2. Sync the removed field: removed field indicates whether the event was discarded during a fork.

Q3.How to prevent excessive slippage in trades
限价单(Limit Order)、价格预言机 (oracle )

Q4 : Please talk about Merkle Tree
For data structure:
A Merkle Tree is a hash tree/binary tree:
leaf nodes store data hashes,
parent nodes store combinations of child hashes,
If any child hash changes,
all parent hashes change too, enabling efficient verification.

For storage:  such as a whitelist, we only need to store the root hash instead of all user addresses,
significantly reducing the cost of data storage.

For verification: we only need to provide the leaf hash and
the Merkle proof (which is an array of sibling node hashes).

Q5 : Please talk about Collateralization
Collateralization Ratio =  Value  of  Collateralization / Value  of  Loan （200-300 %）
liquidation Threshold（ 清算阈值 150% )
质押年化利率 → Staking Annual Percentage Yield (Staking APY) : 3-6%
借贷年化利率 → Lending Annual Percentage Rate (Lending APR)  : 5-10%
Annual（ˈæn.ju.əl）（爱纽哦）
Yield（jiːld）

Q6 : How to ensure the safety of investors' assets
1. 超额抵押（Over-Collateralization）
2. 清算机制（Liquidation Mechanism）

Q7 : Please talk about Flash Loan Attack
Aggregate multiple price sources (Chainlink, backup oracles, DEX TWAP).
Validate the price again before executing liquidation.

Q8 : please talk about tidb
TiDB is a MySQL-compatible distributed MPP database.
It supports OLTP (Online Transaction Processing) and OLAP (Online Analytical Processing) workloads.

MySQL (maiˈsiːkwəl)
distributed (dɪˈstrɪbjuːtɪd)
Transaction (trænˈzækʃn)
workloads (ˈwɜrˌkloʊdz)