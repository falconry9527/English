Q1: EVM Data Storage:
Memory: Temporary Memory, storing function parameters and return values .
Stack: Temporary values, storing intermediate results during computations  within functions.
Storage: Permanent storage On-chain , storing global variables such as mappings and dynamic arrays.
Calldata: Read-only data , storing function parameters  from external calls.

Q2: Solidity Visibility:
public: Accessible from anywhere: within the contract, derived contracts, and externally.
internal: Accessible within the contract and derived (child) contracts.
private:  accessible only within the contract
external: Accessible only from contract outside

Q3: Differences between view, pure, and regular functions in Solidity:
view: can only read the state
pure: can neither read nor modify the state
regular: can both read and modify the state

Q4: Constructor: executed once when the contract is deployed, used to initialize state variables.
Q5: Mapping : Cannot be iterated, Commonly used for address: data

Q6: delegatecall vs(versus) call:
call: executes in the callee’s context and modifies the callee’s state.
delegatecall: executes in the caller’s context and modifies  caller’s state.

Q7: Difference between UUPS and Transparent Proxy
Transparent Proxy: The upgrade logic is located in the proxy contract, which costs more gas
UUPS: The upgrade logic is located in the implementation contract, which costs less gas.

Q8: security problem:
1. Use a Merkle-tree-based whitelisting mechanism to prevent Sybil attacks.
2. Use a Multi-signature mechanism  to prevent the loss or theft of keys.
    If an admin wants to withdraw trading fees, they will need approval from at least 3 out of 5 administrators.
3.Use OpenZeppelin’s security contracts (e.g.,Ownable, AccessControl,TimelockController,Pausable, ReentrancyGuard  ).
a. Use the Ownable/AccessControl contract to manage access control.
b. Use TimelockController contract to delay some dangerous actions
c. Use Pausable contract to Emergency Pause
d. Use ReentrancyGuard contract to prevent Reentrancy Attacks
   Update state first, then transfer funds

Q9: gas optimization :
Use uint256 instead of smaller integer types in storage to avoid the extra costs of packing and unpacking.
Use calldata for external function parameters to reduce costs of gas .
Use memory for temporary variables to reduce  costs of storage/gas .
Logic Optimization: Use Merkle-tree–based whitelists to reduce costs of storage/gas  .

Constructor
administrators
funds
storage

variables
Pausable
